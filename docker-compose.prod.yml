version: '3.7'

networks:
  laravel:

services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./certs:/etc/nginx/certs:ro
    networks:
      - laravel

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./certs:/etc/nginx/certs
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy
    depends_on:
      - nginx-proxy
    networks:
      - laravel

  app:
    build:
      context: ./.docker
      dockerfile: nginx.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    ports:
      - "80:80"
    volumes:
      - ./src:/var/www/html:delegated
    depends_on:
      - php
      - redis
      - postgres
      - mailhog
    networks:
      - laravel

  nginx:
      image: nginx:stable-alpine
      volumes:
          - ./src:/var/www/html
          - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      environment:
        - VIRTUAL_HOST=example.com
        - LETSENCRYPT_HOST=bot.disastrousbug.com
        - LETSENCRYPT_EMAIL=closedonsunday@disastrousbug.com
      depends_on:
          - php
          - postgres
      networks:
          - laravel
  php:
    build:
      context: ./.docker
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    ports:
      - "9000:9000"
    volumes:
      - ./src:/var/www/html:delegated
    networks:
      - laravel

  redis:
    image: redis:alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - laravel

  composer:
    build:
      context: ./.docker
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    volumes:
      - ./src:/var/www/html
    depends_on:
      - php
    entrypoint: [ 'composer', '--ignore-platform-reqs' ]
    networks:
      - laravel

  artisan:
    build:
      context: ./.docker
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    volumes:
      - ./:/var/www/html:delegated
    depends_on:
      - postgres
    entrypoint: [ 'php', '/var/www/html/artisan' ]
    networks:
      - laravel

  postgres:
      image: postgres:latest
      container_name: postgres
      restart: unless-stopped
      tty: true
      ports:
          -  "5432:5432"
      environment:
          - POSTGRES_PASSWORD=password
          - POSTGRES_USER=chatbot_user
          - POSTGRES_DB=chatbot
          - POSGTRES_ROOT_PASSWORD=password
          - SERVICE_NAME=chatgpt
          - SERVICE_TAGS=dev
      volumes:
          - postgres_data:/var/lib/postgresql/data
          - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
      networks:
          - laravel

  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - laravel

volumes:
  postgres_data:
    driver: local
